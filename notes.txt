Project: peacock
App for teaching-learning process
Created: 16-06-2006
Author: Mohan A

Project folder: C:\xampp746\htdoc\projects\peacock@Innova

16-06-2020
----------
to create laravel project
->composer create-project --prefer-dist laravel/laravel peacock

to initialise the git repo
->git init
->git add *
->git commit -m "initial installation"
->git remote add origin http://github.com/mohanavula/peacock.git
->git push -u origin master

to intall mongodb
->composer require jenssegres/mongodb:dev-develop
// add entry "Jenssegers\Mongodb\MongodbServiceProvider::class," to config/app.php
download and copy php mongodb driver "php_mongodb.dll" to php/ext folder. version 1.7.4-7.4-ts-vc15-x64
add entry "extension=php_mongodb.dll" to php.ini

17-06-2020
----------
changes to .env file
->APP_NAME=Peacock
->DB_CONNECTION=mongodb
->DB_PORT=27017
->DB_DATABASE=peacock
->DB_USERNAME=
->DB_PASSWORD=

to add mongodb database connection 
add mongodb connection settings to config/database.php
'mongodb' => [
            'driver' => 'mongodb',
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', 27017),
            'database' => env('DB_DATABASE', 'homestead'),
            'username' => env('DB_USERNAME', 'homestead'),
            'password' => env('DB_PASSWORD', 'secret'),
        ], 

to set up Vue with Auth
->composer require laravel/ui
->php artisan ui vue --auth

to set up Tailwindcss
->npm install tailwindcss
add the following @tailwind directives to resources/css/app.css
  @tailwind base;
  @tailwind components;
  @tailwind utilities;
->npx tailwindcss init  // this will create tailwind.config.js
use postCss method of laravel mix to process css. 
make changes to webpack.mix.js as follows:
  mix.js('resources/js/app.js', 'public/js')
    .postCss('resources/css/app.css', 'public/css', [
    require('tailwindcss'),
  ]);
->npm install // to install packages 
->php artisan serve   // to start the local MongodbServiceProvider

to enable authentication
change: app/User.php
  use Illuminate\Notifications\Notifiable;
  use Jenssegers\Mongodb\Eloquent\Model as Eloquent;
  use Illuminate\Auth\Authenticatable as AuthenticatableTrait;
  use Illuminate\Contracts\Auth\Authenticatable;
  use Illuminate\Contracts\Auth\MustVerifyEmail;
  // use Illuminate\Foundation\Auth\User as Authenticatable;
  class User extends Eloquent implements Authenticatable
  {
      use Notifiable;
      use AuthenticatableTrait;

      /**
      * The attributes that are mass assignable.
      *
      * @var array
      */

      protected $connection = 'mongodb';
      protected $collection = 'users';

      
      protected $fillable = [
          'name', 'email', 'password', 'college_id'
      ];
change migrations: create_users_table.php
  public function up()
    {
        Schema::create('users', function (Blueprint $table) {
            // $table->id();
            // $table->string('name');
            $table->unique('email');
            $table->unique('college_id');
            //$table->timestamp('email_verified_at')->nullable();
            //$table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });
    }